#BlueJ class context
comment0.target=BinaryHeap
comment0.text=\r\n\ Implements\ a\ binary\ heap.\r\n\ Note\ that\ all\ "matching"\ is\ based\ on\ the\ compareTo\ method.\r\n\ @author\ Mark\ Allen\ Weiss\r\n
comment1.params=
comment1.target=BinaryHeap()
comment1.text=\r\n\ Construct\ the\ binary\ heap.\r\n
comment10.params=
comment10.target=boolean\ isEmpty()
comment10.text=\r\n\ Test\ if\ the\ priority\ queue\ is\ logically\ empty.\r\n\ @return\ true\ if\ empty,\ false\ otherwise.\r\n
comment11.params=hole
comment11.target=void\ percolateDown(int)
comment11.text=\r\n\ Internal\ method\ to\ percolate\ down\ in\ the\ heap.\r\n\ @param\ hole\ the\ index\ at\ which\ the\ percolate\ begins.\r\n
comment12.params=
comment12.target=void\ printHeap()
comment12.text=\r\n\ Prints\ out\ the\ binary\ heap\ according\ to\ the\ array\ order\r\n
comment2.params=capacity
comment2.target=BinaryHeap(int)
comment2.text=\r\n\ Construct\ the\ binary\ heap.\r\n\ @param\ capacity\ the\ capacity\ of\ the\ binary\ heap.\r\n
comment3.params=items
comment3.target=BinaryHeap(java.lang.Comparable[])
comment3.text=\r\n\ Construct\ the\ binary\ heap\ given\ an\ array\ of\ items.\r\n
comment4.params=x
comment4.target=void\ insert(java.lang.Comparable)
comment4.text=\r\n\ Insert\ into\ the\ priority\ queue,\ maintaining\ heap\ order.\r\n\ Duplicates\ are\ allowed.\r\n\ @param\ x\ the\ item\ to\ insert.\r\n
comment5.params=newSize
comment5.target=void\ enlargeArray(int)
comment5.text=\r\n\ Enlarges\ the\ array,\ used\ for\ inserting.\r\n\ @param\ newSize\ the\ length\ of\ the\ new\ array\r\n
comment6.params=
comment6.target=int\ getSize()
comment6.text=\r\n\ Accessor\ method\ for\ currentSize\r\n
comment7.params=
comment7.target=java.lang.Comparable\ findMin()
comment7.text=\r\n\ Find\ the\ smallest\ item\ in\ the\ priority\ queue.\r\n\ @return\ the\ smallest\ item,\ or\ throw\ an\ UnderflowException\ if\ empty.\r\n
comment8.params=
comment8.target=java.lang.Comparable\ deleteMin()
comment8.text=\r\n\ Remove\ the\ smallest\ item\ from\ the\ priority\ queue.\r\n\ @return\ the\ smallest\ item,\ or\ throw\ an\ UnderflowException\ if\ empty.\r\n
comment9.params=
comment9.target=void\ buildHeap()
comment9.text=\r\n\ Establish\ heap\ order\ property\ from\ an\ arbitrary\r\n\ arrangement\ of\ items.\ Runs\ in\ linear\ time.\r\n
numComments=13
