#BlueJ class context
comment0.target=SingleLinkedList
comment0.text=\r\n\ A\ basic\ singly\ linked\ list\ implementation,\ utilizing\ a\ dummy\ node\ instead.\r\n\ The\ methods\ have\ not\ been\ changed\ yet\ besides\ First()\r\n\r\n\ @author\ Michael\ T.\ Goodrich\r\n\ @author\ Roberto\ Tamassia\r\n\ @author\ Michael\ H.\ Goldwasser\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=
comment10.target=java.lang.Object\ first()
comment10.text=\r\n\ Returns\ (but\ does\ not\ remove)\ the\ first\ element\ of\ the\ list\r\n\ @return\ element\ at\ the\ front\ of\ the\ list\ (or\ null\ if\ empty)\r\n
comment11.params=
comment11.target=java.lang.Object\ last()
comment11.text=\r\n\ Returns\ (but\ does\ not\ remove)\ the\ last\ element\ of\ the\ list.\r\n\ @return\ element\ at\ the\ end\ of\ the\ list\ (or\ null\ if\ empty)\r\n
comment12.params=e
comment12.target=void\ addFirst(java.lang.Object)
comment12.text=\r\n\ Adds\ an\ element\ to\ the\ front\ of\ the\ list.\r\n\ @param\ e\ \ the\ new\ element\ to\ add\r\n
comment13.params=e
comment13.target=void\ addLast(java.lang.Object)
comment13.text=\r\n\ Adds\ an\ element\ to\ the\ end\ of\ the\ list.\r\n\ @param\ e\ \ the\ new\ element\ to\ add\r\n
comment14.params=
comment14.target=java.lang.Object\ removeFirst()
comment14.text=\r\n\ Removes\ and\ returns\ the\ first\ element\ of\ the\ list.\r\n\ @return\ the\ removed\ element\ (or\ null\ if\ empty)\r\n
comment15.params=o
comment15.target=boolean\ equals(java.lang.Object)
comment16.params=
comment16.target=SingleLinkedList\ clone()
comment17.params=
comment17.target=int\ hashCode()
comment18.params=
comment18.target=java.lang.String\ toString()
comment18.text=\r\n\ Produces\ a\ string\ representation\ of\ the\ contents\ of\ the\ list.\r\n\ This\ exists\ for\ debugging\ purposes\ only.\r\n
comment2.params=value
comment2.target=boolean\ find(java.lang.Object)
comment3.params=valueToInsertAfter\ newValue
comment3.target=boolean\ insertAfter(java.lang.Object,\ java.lang.Object)
comment4.params=value
comment4.target=SingleLinkedList.Node\ locate(java.lang.Object)
comment5.params=value
comment5.target=SingleLinkedList.Node\ locatePrior(java.lang.Object)
comment6.params=valueToInsertBefore\ newValue
comment6.target=boolean\ insertBefore(java.lang.Object,\ java.lang.Object)
comment7.params=
comment7.target=SingleLinkedList()
comment7.text=Constructs\ an\ initially\ empty\ list.
comment8.params=
comment8.target=int\ size()
comment8.text=\r\n\ Returns\ the\ number\ of\ elements\ in\ the\ linked\ list.\r\n\ @return\ number\ of\ elements\ in\ the\ linked\ list\r\n
comment9.params=
comment9.target=boolean\ isEmpty()
comment9.text=\r\n\ Tests\ whether\ the\ linked\ list\ is\ empty.\r\n\ @return\ true\ if\ the\ linked\ list\ is\ empty,\ false\ otherwise\r\n
numComments=19
